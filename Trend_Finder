#Trend Finder V1.3

import tsemodule5
import numpy as np
import matplotlib.pyplot as plt
import arabic_reshaper
from bidi.algorithm import get_display
from scipy.signal import find_peaks
up_trend =[]
down_trend =[]

def count_occurrences(lst):
    counts = {}
    for item in lst:
        if item in counts:
            counts[item] += 1
        else:
            counts[item] = 1
    return counts

# inputs
fractal_scale =2
symbols = ['شپنا', 'شستا', 'خودرو', 'خساپا', 'فارس', 'فولاد','فملی','شکربن','شبندر','اهرم','وملی','وبملت','وسینا','شتران','شبریز','ریشمک','وغدیر','طلا','اطلس']
get_new_data = False
show_chart = True
show_all = False


if show_all == True:
    symbols = tsemodule5.stocklist()

for symbol in symbols:
    data = tsemodule5.stock(symbol,newfile = get_new_data)  
    try:
        prices = np.array(data['<CLOSE>'])
        dates = np.array(data.index)
        if show_chart == True:
            print("show chart")
            peaks, _ = find_peaks(prices,width=fractal_scale)
            troughs, _ = find_peaks(-prices,width=fractal_scale)
            plt.plot(dates,prices, label='Line plot')
            plt.title(get_display(arabic_reshaper.reshape(symbol)))
            plt.plot( dates[peaks], prices[peaks], "o", label=get_display(arabic_reshaper.reshape('قله')), color='red')
            plt.plot(dates[troughs], prices[troughs], "x", label=arabic_reshaper.reshape('کف ها'), color='black')
            plt.show()
    except:
        print("Couldnot get data of ",symbol)
    for i in range(1,11):
        try:
            peaks, _ = find_peaks(prices,width=i)
            troughs, _ = find_peaks(-prices,width=i)
             
            if prices[peaks][0]>prices[peaks][1] and prices[troughs][0] > prices[troughs][1] and prices[peaks][1]>0 and prices[troughs][1]>0:
                if prices[0]>prices[troughs][0]:
                    up_trend.append(symbol)
            if prices[peaks][0] < prices[peaks][1] and prices[troughs][0] < prices[troughs][1] and prices[peaks][1]>0 and prices[troughs][1]>0:
                if prices[0]<prices[peaks][0]:
                    down_trend.append(symbol)
        except:
            True  
print("up trend: ",count_occurrences(up_trend))
print("down trend: ",count_occurrences(down_trend))
